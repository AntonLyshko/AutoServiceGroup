# Project Structure

```
├── src
│   ├── components
│   │   ├── Contact.tsx
│   │   ├── Footer.tsx
│   │   ├── GalleryPreview.tsx
│   │   ├── Hero.tsx
│   │   ├── ImageCompare.tsx
│   │   ├── Navbar.tsx
│   │   ├── ServiceCard.tsx
│   │   └── ServicesSection.tsx
│   ├── data
│   │   ├── imageData.ts
│   │   └── servicesData.ts
│   ├── img
│   │   ├── img_1.webp
│   │   └── img_2.png
│   ├── pages
│   │   ├── Gallery.tsx
│   │   ├── Home.tsx
│   │   └── ServicePage.tsx
│   ├── App.tsx
│   ├── index.css
│   ├── main.tsx
│   └── vite-env.d.ts
├── eslint.config.js
├── index.html
├── package-lock.json
├── package.json
├── postcss.config.js
├── prompt.txt
├── prompt1.txt
├── tailwind.config.js
├── tsconfig.app.json
├── tsconfig.json
├── tsconfig.node.json
└── vite.config.ts
```

# File Contents

## src/App.tsx

```tsx
import React from 'react';
import { Outlet, ScrollRestoration } from 'react-router-dom';
import Navbar from './components/Navbar';
import Footer from './components/Footer';

function App() {
	return (
		<div className='min-h-screen bg-gray-900 text-white flex flex-col'>
			<Navbar />
			<ScrollRestoration />
			<main className='flex-grow'>
				{' '}
				<Outlet />
			</main>
			<Footer />
		</div>
	);
}

export default App;

```

## src/components/Contact.tsx

```tsx
import React from 'react';
import { PhoneCall, Clock, MapPin } from 'lucide-react';

const Contact = () => {
  return (
    <section id="contact" className="py-20 bg-gray-900">
      <div className="container mx-auto px-4">
        <div className="text-center mb-12">
          <h2 className="text-3xl md:text-4xl font-bold text-white mb-4">Контакты</h2>
          <p className="text-gray-400 max-w-2xl mx-auto">
            Свяжитесь с нами или приезжайте прямо сейчас, чтобы получить консультацию по ремонту и обслуживанию вашего автомобиля
          </p>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-2 gap-8 items-center">
          <div className="bg-gray-800 p-8 rounded-lg shadow-lg">
            <h3 className="text-2xl font-bold text-white mb-6">Наши контакты</h3>
            
            <div className="space-y-6">
              <div className="flex items-start">
                <div className="bg-red-600 p-3 rounded-full mr-4">
                  <PhoneCall size={24} className="text-white" />
                </div>
                <div>
                  <h4 className="text-lg font-semibold text-white">Телефон</h4>
                  <a href="tel:+79655118585" className="text-gray-300 hover:text-red-500 transition-colors">
                    +7 965 511 8585
                  </a>
                </div>
              </div>
              
              <div className="flex items-start">
                <div className="bg-red-600 p-3 rounded-full mr-4">
                  <Clock size={24} className="text-white" />
                </div>
                <div>
                  <h4 className="text-lg font-semibold text-white">Часы работы</h4>
                  <p className="text-gray-300">Ежедневно: 10:00-22:00</p>
                </div>
              </div>
              
              <div className="flex items-start">
                <div className="bg-red-600 p-3 rounded-full mr-4">
                  <MapPin size={24} className="text-white" />
                </div>
                <div>
                  <h4 className="text-lg font-semibold text-white">Адрес</h4>
                  <p className="text-gray-300">Березовский, Транспортников 42А</p>
                </div>
              </div>
            </div>
          </div>
          
          <div className="h-[400px] rounded-lg overflow-hidden shadow-lg">
            <iframe 
              src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2181.6180769263375!2d60.8088433!3d56.911438!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x43c16ef7c6fa7b47%3A0xa7e554c1ab3edbd8!2z0YPQuy4g0KLRgNCw0L3RgdC_0L7RgNGC0L3QuNC60L7QsiwgNDLQkCwg0JHQtdGA0ZHQt9C-0LLRgdC60LjQuSwg0KHQstC10YDQtNC70L7QstGB0LrQsNGPINC-0LHQuy4sIDYyMzcwMg!5e0!3m2!1sru!2sru!4v1716915066364!5m2!1sru!2sru" 
              width="100%" 
              height="100%" 
              style={{ border: 0 }} 
              allowFullScreen 
              loading="lazy" 
              referrerPolicy="no-referrer-when-downgrade"
              title="Auto Service location"
            ></iframe>
          </div>
        </div>
      </div>
    </section>
  );
};

export default Contact;
```

## src/components/Footer.tsx

```tsx
import React from 'react';
import { Link } from 'react-router-dom';
import { PhoneCall, Mail, MapPin, Clock, Instagram, Facebook } from 'lucide-react';

const Footer = () => {
  const currentYear = new Date().getFullYear();

  return (
    <footer className="bg-gray-950 text-white">
      <div className="container mx-auto px-4 py-12">
        <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
          <div>
            <Link to="/" className="text-2xl font-bold flex items-center mb-4">
              <span className="text-red-600">Auto</span>Service
            </Link>
            <p className="text-gray-400 mb-6">
              Профессиональный ремонт и обслуживание автомобилей любых марок с использованием современного оборудования
            </p>
            <div className="flex space-x-4">
              <a href="#" className="text-gray-400 hover:text-red-500 transition-colors">
                <Instagram size={24} />
              </a>
              <a href="#" className="text-gray-400 hover:text-red-500 transition-colors">
                <Facebook size={24} />
              </a>
            </div>
          </div>
          
          <div>
            <h3 className="text-xl font-semibold mb-4 text-white">Услуги</h3>
            <ul className="space-y-2">
              <li>
                <Link to="/services/mechanical-work" className="text-gray-400 hover:text-red-500 transition-colors">
                  Слесарные работы
                </Link>
              </li>
              <li>
                <Link to="/services/diagnostics" className="text-gray-400 hover:text-red-500 transition-colors">
                  Диагностика
                </Link>
              </li>
              <li>
                <Link to="/services/electrical" className="text-gray-400 hover:text-red-500 transition-colors">
                  Электрика
                </Link>
              </li>
              <li>
                <Link to="/services/painting" className="text-gray-400 hover:text-red-500 transition-colors">
                  Покраска
                </Link>
              </li>
              <li>
                <Link to="/services/welding" className="text-gray-400 hover:text-red-500 transition-colors">
                  Сварочные работы
                </Link>
              </li>
              <li>
                <Link to="/services/detailing" className="text-gray-400 hover:text-red-500 transition-colors">
                  Детейлинг
                </Link>
              </li>
            </ul>
          </div>
          
          <div>
            <h3 className="text-xl font-semibold mb-4 text-white">Контакты</h3>
            <div className="space-y-4">
              <div className="flex items-center">
                <PhoneCall size={20} className="text-red-500 mr-3" />
                <a href="tel:+79655118585" className="text-gray-400 hover:text-red-500 transition-colors">
                  +7 965 511 8585
                </a>
              </div>
              <div className="flex items-center">
                <Clock size={20} className="text-red-500 mr-3" />
                <span className="text-gray-400">10:00-22:00</span>
              </div>
              <div className="flex items-start">
                <MapPin size={20} className="text-red-500 mr-3 mt-1" />
                <span className="text-gray-400">Березовский, Транспортников 42А</span>
              </div>
            </div>
          </div>
        </div>
        
        <div className="border-t border-gray-800 mt-12 pt-6 text-center">
          <p className="text-gray-500">
            © {currentYear} AutoService. Все права защищены.
          </p>
        </div>
      </div>
    </footer>
  );
};

export default Footer;
```

## src/components/GalleryPreview.tsx

```tsx
import React from 'react';
import { Link } from 'react-router-dom';

// Импортируем наш кастомный компонент
import ImageCompare from './ImageCompare'; // Убедитесь, что путь правильный

// Импортируем наш единый массив данных
import { galleryItemsData } from '../data/imageData';

const GalleryPreview = () => {
	// Оставляем первые 6 элементов для предпросмотра (это даст 3 ряда по 2 элемента)
	const previewItems = galleryItemsData.slice(0, 6);

	return (
		<section className='py-20 bg-gray-950'>
			<div className='container mx-auto px-4'>
				<div className='text-center mb-12'>
					<h2 className='text-3xl md:text-4xl font-bold text-white mb-4'>
						Наши работы
					</h2>
					<p className='text-gray-400 max-w-2xl mx-auto'>
						Примеры выполненных работ по ремонту, обслуживанию и детейлингу
						автомобилей.
					</p>
				</div>

				{/* --- Измененная сетка --- */}
				{/* Было: grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 */}
				{/* Стало: grid-cols-1 md:grid-cols-2 */}
				<div className='grid grid-cols-1 md:grid-cols-2 gap-x-8 gap-y-10 mb-12'>
					{previewItems.map((item) => (
						<div key={item.id} className='group'>
							{/* Контейнер для изображения или слайдера */}
							{/* Увеличим высоту для больших карточек */}
							<div className='relative overflow-hidden rounded-lg h-[350px] md:h-[400px] mb-3 bg-gray-800'>
								{item.type === 'single' ? (
									<img
										src={item.imageUrl}
										alt={item.title}
										className='w-full h-full object-cover transition-transform duration-500 group-hover:scale-110'
										loading='lazy'
									/>
								) : (
									// --- Используем наш кастомный компонент ---
									<ImageCompare
										beforeImage={item.beforeImage}
										afterImage={item.afterImage}
										altBefore={`До - ${item.title}`}
										altAfter={`После - ${item.title}`}
									/>
								)}
							</div>

							{/* Общий блок для текста под изображением/слайдером */}
							<div>
								<h4 className='text-lg font-semibold text-white mb-1'>
									{item.title}
									{item.type === 'beforeAfter' && (
										<span className='text-sm text-gray-400 ml-2'>
											(До/После)
										</span>
									)}
								</h4>
								<p className='text-gray-300 text-sm'>{item.description}</p>
							</div>
						</div>
					))}
				</div>

				<div className='text-center'>
					<Link
						to='/gallery'
						className='inline-block bg-red-600 hover:bg-red-700 text-white font-semibold py-3 px-8 rounded-md transition-colors duration-300'
					>
						Смотреть все работы
					</Link>
				</div>
			</div>
		</section>
	);
};

export default GalleryPreview;

```

## src/components/Hero.tsx

```tsx
// src/components/Hero.tsx
import React from 'react';
import { ChevronDown, MessageCircle } from 'lucide-react';
// Импортируем новое фоновое изображение
import heroBackgroundImage from '../img/img_1.webp';

const Hero = () => {
	const scrollToContent = () => {
		window.scrollTo({
			top: window.innerHeight,
			behavior: 'smooth',
		});
	};

	return (
		<div
			className='relative h-screen w-full bg-cover bg-center flex items-center'
			style={{
				// Используем импортированное изображение
				backgroundImage: `url(${heroBackgroundImage})`,
				backgroundPosition: 'center',
				backgroundSize: 'cover',
			}}
		>
			{/* Overlay */}
			<div className='absolute inset-0 bg-gradient-to-b from-black/70 via-black/60 to-black/80 z-0'></div>

			<div className='container mx-auto px-4 z-10 text-center'>
				<h1 className='text-4xl md:text-6xl font-bold text-white mb-6'>
					Автосервиса
					<br />
					<span className='text-red-600 relative top-2'>
						ТрейдАвто-групп
					</span>
				</h1>
				<p className='text-xl md:text-2xl text-gray-300 mb-8 max-w-3xl mx-auto'>
					Профессиональный ремонт и обслуживание автомобилей любых марок с
					использованием современного оборудования и оригинальных запчастей
				</p>
				<div className='flex flex-col sm:flex-row justify-center gap-4'>
					<a
						href='https://wa.me/79655118585'
						target='_blank'
						rel='noopener noreferrer'
						className='py-3 px-8 bg-green-600 hover:bg-green-700 text-white font-semibold rounded-md transition-colors duration-300 flex items-center justify-center'
					>
						<MessageCircle className='mr-2' size={20} />
						Написать в WhatsApp
					</a>
					<button
						onClick={scrollToContent}
						className='py-3 px-8 bg-transparent border-2 border-white hover:bg-white hover:text-gray-900 text-white font-semibold rounded-md transition-all duration-300'
					>
						Узнать больше
					</button>
				</div>
			</div>

			{/* Scroll down indicator */}
			<div className='absolute bottom-8 left-1/2 transform -translate-x-1/2 animate-bounce'>
				<button
					onClick={scrollToContent}
					className='text-white focus:outline-none'
					aria-label='Scroll down'
				>
					<ChevronDown size={32} />
				</button>
			</div>
		</div>
	);
};

export default Hero;

```

## src/components/ImageCompare.tsx

```tsx
import React, { useState, useRef, useCallback, useEffect } from 'react';

interface ImageCompareProps {
	beforeImage: string;
	afterImage: string;
	altBefore?: string;
	altAfter?: string;
}

const ImageCompare: React.FC<ImageCompareProps> = ({
	beforeImage,
	afterImage,
	altBefore = 'Before',
	altAfter = 'After',
}) => {
	const [sliderPosition, setSliderPosition] = useState<number>(50); // Позиция слайдера в %
	const [isDragging, setIsDragging] = useState<boolean>(false); // Только для тач
	const containerRef = useRef<HTMLDivElement>(null);
	const handleRef = useRef<HTMLDivElement>(null);
	// Убрали beforeImageRef, так как clip-path применяется прямо к img

	const updateSliderPosition = useCallback((clientX: number) => {
		if (!containerRef.current) return;
		const rect = containerRef.current.getBoundingClientRect();
		let x = clientX - rect.left;
		x = Math.max(0, Math.min(x, rect.width));
		const percent = (x / rect.width) * 100;
		setSliderPosition(percent);
	}, []);

	const handleMouseMove = useCallback(
		(e: React.MouseEvent<HTMLDivElement>) => {
			updateSliderPosition(e.clientX);
		},
		[updateSliderPosition]
	);

	const handleTouchStart = useCallback(
		(e: React.TouchEvent<HTMLDivElement>) => {
			if (
				e.target === handleRef.current ||
				handleRef.current?.contains(e.target as Node)
			) {
				setIsDragging(true);
				if (e.touches.length > 0) {
					updateSliderPosition(e.touches[0].clientX);
				}
			}
		},
		[updateSliderPosition]
	);

	const handleTouchMove = useCallback(
		(e: TouchEvent) => {
			if (!isDragging) return;
			if (e.touches.length > 0) {
				updateSliderPosition(e.touches[0].clientX);
			}
		},
		[isDragging, updateSliderPosition]
	);

	const handleTouchEnd = useCallback(() => {
		if (isDragging) {
			setIsDragging(false);
		}
	}, [isDragging]);

	useEffect(() => {
		if (isDragging) {
			document.addEventListener('touchmove', handleTouchMove, {
				passive: false,
			});
			document.addEventListener('touchend', handleTouchEnd);
			document.addEventListener('touchcancel', handleTouchEnd);
			document.body.style.overflow = 'hidden';
		} else {
			document.body.style.overflow = '';
		}
		return () => {
			document.removeEventListener('touchmove', handleTouchMove);
			document.removeEventListener('touchend', handleTouchEnd);
			document.removeEventListener('touchcancel', handleTouchEnd);
			document.body.style.overflow = '';
		};
	}, [isDragging, handleTouchMove, handleTouchEnd]);

	return (
		<div
			ref={containerRef}
			className='relative w-full h-full overflow-hidden select-none'
			onMouseMove={handleMouseMove}
			onTouchStart={handleTouchStart}
		>
			{/* After Image (Базовый слой) */}
			<img
				src={afterImage}
				alt={altAfter}
				className='absolute top-0 left-0 w-full h-full object-cover pointer-events-none'
				loading='lazy'
			/>

			{/* Before Image (Слой с маской) */}
			{/* Теперь clip-path применяется прямо к изображению */}
			<img
				src={beforeImage}
				alt={altBefore}
				className='absolute top-0 left-0 w-full h-full object-cover pointer-events-none'
				style={{
					// clipPath: `inset(0px ${100 - sliderPosition}% 0px 0px)`, // Стандартный синтаксис
					clipPath: `polygon(0 0, ${sliderPosition}% 0, ${sliderPosition}% 100%, 0 100%)`, // Через полигон, более надежно
				}}
				loading='lazy'
			/>

			{/* Slider Handle */}
			<div
				ref={handleRef}
				className='absolute top-0 bottom-0 w-1 bg-red-600 z-10 pointer-events-none md:pointer-events-auto'
				style={{
					left: `calc(${sliderPosition}% - 0.5px)`,
					touchAction: 'none',
				}}
			>
				{/* Визуальный элемент ползунка */}
				<div className='absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-10 h-10 rounded-full bg-red-600 border-2 border-white flex items-center justify-center shadow-md'>
					<svg
						xmlns='http://www.w3.org/2000/svg'
						fill='none'
						viewBox='0 0 24 24'
						strokeWidth={2}
						stroke='white'
						className='w-6 h-6'
					>
						<path
							strokeLinecap='round'
							strokeLinejoin='round'
							d='M8.25 15L12 18.75 15.75 15m-7.5-6L12 5.25 15.75 9'
						/>
					</svg>
				</div>
			</div>
		</div>
	);
};

export default ImageCompare;

```

## src/components/Navbar.tsx

```tsx
import React, { useState, useEffect } from 'react';
import { Link, useLocation } from 'react-router-dom';
import { Menu, X, PhoneCall, Clock, MapPin } from 'lucide-react';
import { servicesData } from '../data/servicesData';

const Navbar = () => {
	const [isOpen, setIsOpen] = useState(false);
	const [scrolled, setScrolled] = useState(false);
	const location = useLocation();

	useEffect(() => {
		const handleScroll = () => {
			const isScrolled = window.scrollY > 10;
			if (isScrolled !== scrolled) {
				setScrolled(isScrolled);
			}
		};

		window.addEventListener('scroll', handleScroll);
		return () => {
			window.removeEventListener('scroll', handleScroll);
		};
	}, [scrolled]);

	// Close mobile menu on route change
	useEffect(() => {
		closeMenu();
	}, [location.pathname]);

	const toggleMenu = () => {
		setIsOpen(!isOpen);
	};

	const closeMenu = () => {
		setIsOpen(false);
	};

	// Filter out 'why-choose-us' service for navigation links
	const navServices = servicesData.filter(
		(service) => service.id !== 'why-choose-us'
	);

	return (
		<header
			className={`fixed w-full z-50 transition-all duration-300 ${
				scrolled
					? 'bg-gray-900/95 backdrop-blur-sm shadow-lg' // Scrolled state: Solid background with blur
					: 'bg-gradient-to-b from-gray-950/70 via-gray-950/50 to-transparent' // Top state: Gradient dark to transparent
			}`}
		>
			<div className='container mx-auto px-4'>
				{/* --- Row 1: Logo and Phone --- */}
				<div className='flex justify-between items-center py-3'>
					{/* Logo */}
					<Link
						to='/'
						className='text-2xl font-bold text-white flex items-center'
						onClick={closeMenu}
					>
						ТрейдАвто<span className='text-red-600'>-групп</span>
					</Link>

					{/* Phone Number (Desktop) & Mobile Menu Toggle */}
					<div className='flex items-center space-x-4'>
						{/* Phone number - hidden on mobile, shown on md and up */}
						<div className='hidden md:flex items-center text-gray-300'>
							<PhoneCall size={18} className='mr-2 text-red-500' />
							<a
								href='tel:+79655118585'
								className='hover:text-red-500 transition-colors text-sm lg:text-base'
							>
								+7 965 511 8585
							</a>
						</div>

						{/* Mobile menu button */}
						<button
							className='md:hidden text-white focus:outline-none'
							onClick={toggleMenu}
							aria-label='Toggle menu'
						>
							{isOpen ? <X size={24} /> : <Menu size={24} />}
						</button>
					</div>
				</div>

				{/* Divider Line (Optional, hidden when gradient is active unless desired) */}
				<hr
					className={`border-gray-700/50 hidden md:block ${
						scrolled ? '' : 'opacity-0'
					}`}
				/>

				{/* --- Row 2: Navigation Links (Desktop) --- */}
				<nav className='hidden md:flex items-center justify-between flex-wrap py-2'>
					{/* Display filtered service links directly */}
					{navServices.map(
						(
							service // Use filtered navServices
						) => (
							<Link
								key={service.id}
								to={`/services/${service.id}`}
								// Added font-semibold for bolder text
								className='text-gray-300 hover:text-red-500 transition-colors text-sm lg:text-base whitespace-nowrap py-1 px-1 font-semibold'
							>
								{service.title}
							</Link>
						)
					)}
					{/* "Наши работы" Link */}
					<Link
						to='/gallery'
						// Added font-semibold for bolder text
						className='text-gray-300 hover:text-red-500 transition-colors text-sm lg:text-base whitespace-nowrap py-1 px-1 font-semibold'
					>
						Наши работы
					</Link>
				</nav>
			</div>

			{/* --- Mobile Menu (Off-canvas) --- */}
			<div
				className={`md:hidden fixed inset-0 bg-gray-900 z-40 transform transition-transform duration-300 ease-in-out ${
					isOpen ? 'translate-x-0' : 'translate-x-full'
				}`}
			>
				{/* Close button inside mobile menu */}
				<button
					className='absolute top-6 right-5 text-white focus:outline-none'
					onClick={closeMenu}
					aria-label='Close menu'
				>
					<X size={28} />
				</button>

				<div className='flex flex-col h-full overflow-y-auto py-20 px-4 space-y-4'>
					{/* Service Links */}
					<h3 className='text-xl font-semibold text-white border-b border-gray-700 pb-2'>
						Услуги
					</h3>
					<div className='flex flex-col space-y-3 pl-2'>
						{navServices.map(
							(
								service // Use filtered navServices here as well
							) => (
								<Link
									key={service.id}
									to={`/services/${service.id}`}
									className='block text-gray-300 hover:text-red-500 transition-colors text-lg'
									onClick={closeMenu} // Close menu on link click
								>
									{service.title}
								</Link>
							)
						)}
					</div>

					{/* Gallery Link */}
					<Link
						to='/gallery'
						className='text-xl text-white hover:text-red-500 transition-colors pt-2 border-t border-gray-700 mt-4'
						onClick={closeMenu} // Close menu on link click
					>
						Наши работы
					</Link>

					{/* Contact Info at the bottom */}
					<div className='mt-auto pt-6 border-t border-gray-700 space-y-4'>
						<div className='flex items-center text-white'>
							<PhoneCall size={20} className='mr-3 text-red-500' />
							<a href='tel:+79655118585' className='text-lg'>
								+7 965 511 8585
							</a>
						</div>
						<div className='flex items-center text-white'>
							<Clock size={20} className='mr-3 text-red-500' />
							<span className='text-lg'>10:00-22:00</span>
						</div>
						<div className='flex items-start text-white'>
							<MapPin size={20} className='mr-3 text-red-500 mt-1' />
							<span className='text-lg'>
								Березовский, Транспортников 42А
							</span>
						</div>
					</div>
				</div>
			</div>
		</header>
	);
};

export default Navbar;

```

## src/components/ServiceCard.tsx

```tsx
import React from 'react';
import { Link } from 'react-router-dom';
import { ArrowRight } from 'lucide-react';

interface ServiceCardProps {
	id: string;
	title: string;
	description: string;
	imageUrl: string;
	index: number;
}

const ServiceCard: React.FC<ServiceCardProps> = ({
	id,
	title,
	description,
	imageUrl,
	index,
}) => {
	// const isEven = index % 2 === 0; // Переменная isEven больше не используется в стилях

	return (
		<div
			className={`relative overflow-hidden bg-gray-800 rounded-lg group transition-all duration-300 hover:shadow-[0_0_15px_rgba(220,38,38,0.3)] h-[300px] md:h-[400px]`}
		>
			{/* Background image with overlay */}
			<div
				className='absolute inset-0 bg-cover bg-center transition-transform duration-500 group-hover:scale-110'
				style={{ backgroundImage: `url(${imageUrl})` }}
			/>
			<div className='absolute inset-0 bg-gradient-to-t from-black via-black/70 to-transparent opacity-80 group-hover:opacity-90 transition-opacity duration-300'></div>

			{/* Content */}
			<div className='relative h-full flex flex-col justify-end p-6 z-10'>
				<h3 className='text-2xl md:text-3xl font-bold text-white mb-3 group-hover:text-red-500 transition-colors duration-300'>
					{title}
				</h3>
				{/* Добавлен класс text-base для увеличения шрифта описания */}
				<p className='text-gray-300 mb-6 max-w-md text-lg'>
					{description}
				</p>
				<Link
					to={`/services/${id}`}
					className='inline-flex items-center text-white bg-red-600 hover:bg-red-700 py-2 px-4 rounded-md transition-colors duration-300 w-fit'
				>
					Подробнее
					<ArrowRight size={18} className='ml-2' />
				</Link>
			</div>
		</div>
	);
};

export default ServiceCard;

```

## src/components/ServicesSection.tsx

```tsx
import React from 'react';
import ServiceCard from './ServiceCard';
import { Service } from '../data/servicesData';

interface ServicesSectionProps {
	services: Service[];
}

const ServicesSection: React.FC<ServicesSectionProps> = ({ services }) => {
	return (
		<section id='services' className='py-20 bg-gray-900'>
			<div className='container mx-auto px-4'>
				<div className='text-center mb-12'>
					<h2 className='text-3xl md:text-4xl font-bold text-white mb-4'>
						Наши услуги
					</h2>
					<p className='text-gray-400 max-w-2xl mx-auto'>
						Мы предлагаем полный спектр услуг по ремонту и обслуживанию
						автомобилей любых марок
					</p>
				</div>

				<div className='grid grid-cols-1 md:grid-cols-2 gap-6'>
					{services.map((service, index) => (
						<ServiceCard
							key={service.id}
							id={service.id}
							title={service.title}
							description={service.shortDescription}
							imageUrl={service.imageUrl}
							index={index}
						/>
					))}
				</div>
			</div>
		</section>
	);
};

export default ServicesSection;

```

## src/data/imageData.ts

```ts
// --- Остальной код galleryItemsData остается без изменений ---
export interface GalleryItemBase {
	id: number | string;
	title: string;
	description: string;
}

export interface GallerySingleItem extends GalleryItemBase {
	type: 'single';
	imageUrl: string;
}

export interface GalleryBeforeAfterItem extends GalleryItemBase {
	type: 'beforeAfter';
	beforeImage: string;
	afterImage: string;
}

export type GalleryItem = GallerySingleItem | GalleryBeforeAfterItem;

export const galleryItemsData: GalleryItem[] = [
	{
		id: 1,
		type: 'single',
		imageUrl:
			'https://images.pexels.com/photos/190574/pexels-photo-190574.jpeg',
		title: 'Ремонт двигателя',
		description: 'Капитальный ремонт двигателя Toyota',
	},
	{
		id: 'ba1',
		type: 'beforeAfter',
		title: 'Восстановление кузова',
		description: 'Полное восстановление после ДТП',
		beforeImage:
			'https://images.pexels.com/photos/9626967/pexels-photo-9626967.jpeg',
		afterImage:
			'https://images.pexels.com/photos/3778769/pexels-photo-3778769.jpeg',
	},
	{
		id: 2,
		type: 'single',
		imageUrl:
			'https://images.pexels.com/photos/244553/pexels-photo-244553.jpeg',
		title: 'Покраска автомобиля',
		description: 'Полная покраска Mercedes-Benz',
	},
	{
		id: 'ba2',
		type: 'beforeAfter',
		title: 'Полировка кузова',
		description: 'Устранение царапин и придание блеска',
		beforeImage:
			'https://images.pexels.com/photos/9800012/pexels-photo-9800012.jpeg',
		afterImage:
			'https://images.pexels.com/photos/3802510/pexels-photo-3802510.jpeg',
	},
	{
		id: 3,
		type: 'single',
		imageUrl:
			'https://images.pexels.com/photos/3807500/pexels-photo-3807500.jpeg',
		title: 'Ремонт подвески',
		description: 'Замена амортизаторов и пружин',
	},
	{
		id: 4,
		type: 'single',
		imageUrl:
			'https://images.pexels.com/photos/9607184/pexels-photo-9607184.jpeg',
		title: 'Детейлинг салона',
		description: 'Химчистка и восстановление пластика',
	},
	{
		id: 5,
		type: 'single',
		imageUrl:
			'https://images.pexels.com/photos/4489731/pexels-photo-4489731.jpeg',
		title: 'Сварочные работы',
		description: 'Восстановление порогов и днища',
	},
	{
		id: 6,
		type: 'single',
		imageUrl:
			'https://images.pexels.com/photos/13009432/pexels-photo-13009432.jpeg',
		title: 'Диагностика',
		description: 'Компьютерная диагностика систем',
	},
];

```

## src/data/servicesData.ts

```ts
// src/data/servicesData.ts

export interface Service {
	id: string;
	title: string;
	shortDescription: string; // Описание стало короче
	fullDescription: string;
	imageUrl: string;
	services: string[];
}

export const servicesData: Service[] = [
	{
		id: 'why-choose-us',
		title: 'Почему выбирают нас',
		shortDescription:
			'Полный цикл обслуживания: от заказа запчастей до установки. Ваше удобство - наш приоритет.', // Сокращено
		fullDescription:
			'Мы стремимся сделать процесс обслуживания вашего автомобиля максимально комфортным и беззаботным. Наши специалисты берут на себя все заботы - от заказа необходимых запчастей до их установки. Все, что требуется от вас - это предоставить автомобиль и сохранять хорошее настроение.',
		imageUrl:
			'https://images.pexels.com/photos/3807133/pexels-photo-3807133.jpeg',
		services: [
			'Комплексный подход к обслуживанию',
			'Заказ и доставка запчастей',
			'Профессиональная установка',
			'Гарантия на все виды работ',
			'Прозрачное ценообразование',
		],
	},
	{
		id: 'mechanical-work',
		title: 'Слесарные работы',
		shortDescription:
			'Комплексный ремонт и ТО: от ДВС до ходовой. Гарантия безупречной работы механики.', // Сокращено
		fullDescription:
			'Наши квалифицированные механики проводят полный спектр слесарных работ по обслуживанию и ремонту автомобилей любых марок. Мы специализируемся на капитальном ремонте двигателей, коробок передач, ходовой части, а также на плановом техническом обслуживании. Все работы выполняются с использованием современного оборудования и качественных материалов.',
		imageUrl:
			'https://images.pexels.com/photos/3806249/pexels-photo-3806249.jpeg',
		services: [
			'Капитальный ремонт ДВС',
			'Ремонт ГБЦ',
			'Капитальный ремонт механических коробок',
			'Обслуживание ходовой части',
			'Ремонт мостов',
			'Ремонт кардана',
			'Ремонт рулевых реек',
			'Восстановление стоек амортизаторов',
			'Замена ступичных подшипников',
			'Замена колодок',
			'Полное ТО',
			'Замена масла в ДВС',
			'Замена масла в КПП',
			'Замена масла в системе ГУР',
			'Промывка системы',
			'Шиномонтаж',
			'Замена радиатора',
			'Замена радиатора печки',
			'Замена ГРМ',
			'Восстановление генераторов',
			'Ремонт топливной системы',
			'Замена бензонасоса',
			'Промывка топливного бака',
			'Шлифовка/расточка ГБЦ и Блоков',
			'Восстановление и установка выхлопных систем',
			'Замена всех технических жидкостей',
		],
	},
	{
		id: 'diagnostics',
		title: 'Диагностика',
		shortDescription:
			'Точная диагностика всех систем авто на современном оборудовании. Раннее выявление неисправностей.', // Сокращено
		fullDescription:
			'Мы предлагаем полный спектр диагностических услуг для выявления технических проблем вашего автомобиля. Используя современное компьютерное оборудование и профессиональные инструменты, наши специалисты проводят тщательную проверку всех систем и узлов, что позволяет своевременно обнаружить и устранить неисправности.',
		imageUrl:
			'https://images.pexels.com/photos/3807231/pexels-photo-3807231.jpeg',
		services: [
			'Диагностика электронная (компьютерная)',
			'Диагностика механическая',
			'Комплексная диагностика (Полный осмотр авто)',
			'Измерение компрессии в цилиндре',
			'Проверка эндоскопом',
			'Диагностика фар',
			'Диагностика проводки',
		],
	},
	{
		id: 'electrical',
		title: 'Электрика',
		shortDescription:
			'Ремонт автоэлектрики любой сложности: от проводки до установки доп. оборудования.', // Сокращено
		fullDescription:
			'Электрические системы современных автомобилей становятся все сложнее, и их обслуживание требует особых знаний и оборудования. Наши специалисты по автоэлектрике проводят диагностику и ремонт электрооборудования, устанавливают дополнительное оборудование и восстанавливают электрические цепи с высоким качеством исполнения.',
		imageUrl:
			'https://images.pexels.com/photos/2244746/pexels-photo-2244746.jpeg',
		services: [
			'Восстановление и замена проводки',
			'Ремонт фар',
			'Ремонт приборной панели',
			'Установка музыки (колонки, настройка магнитофона, савбуфер, усилитель и т.д.)',
			'Установка сигнализации',
			'Замена лампочек (В фарах, приборной панели, на торпедо)',
			'Восстановление систем SRS (восстановление полной системы безопаности подушек, ремней)',
		],
	},
	{
		id: 'painting',
		title: 'Покраска',
		shortDescription:
			'Качественная покраска и кузовной ремонт. Восстановление вида и защита от коррозии.', // Сокращено
		fullDescription:
			'Наш кузовной цех оснащен современным оборудованием для качественного восстановления и покраски автомобилей. Мы используем профессиональные материалы и соблюдаем все технологические процессы, чтобы обеспечить идеальное покрытие и долговечность результата. От небольшого ремонта до полной перекраски - мы гарантируем высочайшее качество работы.',
		imageUrl:
			'https://images.pexels.com/photos/4480505/pexels-photo-4480505.jpeg',
		services: [
			'Полный окрас авто',
			'Частичный окрас авто',
			'Восстановление бамперов',
			'Восстановление геометрии',
			'Восстановление/выставление зазоров',
			'Покрас подкапотного пространства',
			'Восстановление кабин грузовых авто (Газели, Hyundai Porter и т.д.)',
		],
	},
	{
		id: 'welding',
		title: 'Сварочные работы',
		shortDescription:
			'Сварка любой сложности для восстановления кузова и конструкций. Опытные мастера.', // Сокращено
		fullDescription:
			'Сварочные работы являются важной частью кузовного ремонта автомобилей. Наши мастера с многолетним опытом проводят работы любой сложности по восстановлению кузова, используя профессиональное сварочное оборудование. Мы гарантируем высокое качество сварных швов и структурную целостность отремонтированных элементов.',
		imageUrl:
			'https://images.pexels.com/photos/3846249/pexels-photo-3846249.jpeg',
		services: [
			'Переварка порогов',
			'Переварка дна',
			'Переварка арок',
			'Переварка лонжеронов',
			'Переварка балки',
			'Переварка глушителей',
			'Переварка крыши',
			'Переварка телевизоров',
		],
	},
	{
		id: 'detailing',
		title: 'Детейлинг',
		shortDescription:
			'Детейлинг для идеального вида и защиты вашего авто. Полировка, химчистка, покрытия.', // Сокращено
		fullDescription:
			'Детейлинг - это комплекс процедур по тщательному уходу за автомобилем, направленный на улучшение его внешнего вида и защиту. Мы предлагаем услуги по полировке кузова, химчистке салона, тонировке стекол, перетяжке элементов салона и нанесению защитных покрытий. Наши специалисты используют только профессиональные материалы и оборудование для достижения наилучшего результата.',
		imageUrl:
			'https://images.pexels.com/photos/6794815/pexels-photo-6794815.jpeg',
		services: [
			'Предпродажная подготовка (легкая полировка кузова и легкая химчистка салона)',
			'Полная полировка кузова',
			'Тонировка стекол любой сложности',
			'Перешивка руля и салона',
			'Перешивка ручек АКПП',
			'Перешивка подлокотников',
			'Обтягивание авто пленкой',
		],
	},
	{
		id: 'spare-parts',
		title: 'Запчасти',
		shortDescription:
			'Заказ новых и контрактных запчастей по выгодным ценам с быстрой доставкой.', // Сокращено
		fullDescription:
			'Мы предлагаем широкий ассортимент оригинальных и альтернативных запчастей для автомобилей всех марок. Благодаря прямому сотрудничеству с крупными дистрибьюторами, мы можем предложить конкурентные цены и быструю доставку. Наши специалисты помогут вам подобрать необходимые детали и расходные материалы, полностью соответствующие техническим требованиям вашего автомобиля.',
		imageUrl:
			'https://images.pexels.com/photos/9226098/pexels-photo-9226098.jpeg',
		services: [
			'Заказ новых запчастей',
			'Поставка контрактных запчастей',
			'Доставка запчастей в короткие сроки',
			'Подбор аналогов по выгодным ценам',
			'Поставка оригинальных технических жидкостей',
		],
	},
];

```

## src/img/img_1.webp

```webp
[Binary file content not included]
```

## src/img/img_2.png

```png
[File content not included. Size (1190561 bytes) exceeds the maximum allowed size (1048576 bytes)]
```

## src/index.css

```css
@tailwind base;
@tailwind components;
@tailwind utilities;

```

## src/main.tsx

```tsx
import { StrictMode } from 'react';
import { createRoot } from 'react-dom/client';
import { createBrowserRouter, RouterProvider } from 'react-router-dom';
import App from './App.tsx';
import Home from './pages/Home.tsx';
import ServicePage from './pages/ServicePage.tsx';
import Gallery from './pages/Gallery.tsx';
import { servicesData } from './data/servicesData.ts';
import './index.css';

const routes = [
	{
		path: '/',
		element: <App />,
		children: [
			{
				index: true,
				element: <Home />,
			},
			{
				path: 'gallery',
				element: <Gallery />,
			},
			...servicesData.map((service) => ({
				path: `services/${service.id}`,
				element: <ServicePage serviceId={service.id} />,
			})),
		],
	},
];

const router = createBrowserRouter(routes);

createRoot(document.getElementById('root')!).render(
	<StrictMode>
		<RouterProvider router={router} />
	</StrictMode>
);

```

## src/pages/Gallery.tsx

```tsx
import React, { useState, useEffect, useCallback } from 'react';
import { useNavigate } from 'react-router-dom';
import { ArrowLeft, X } from 'lucide-react';
import { galleryItemsData, GalleryItem } from '../data/imageData';
import ImageCompare from '../components/ImageCompare';

const Gallery = () => {
	const navigate = useNavigate();
	const [activeItemIndex, setActiveItemIndex] = useState<number | null>(
		null
	);

	const openModal = (index: number) => {
		if (index >= 0 && index < galleryItemsData.length) {
			setActiveItemIndex(index);
			document.body.style.overflow = 'hidden';
		}
	};

	const closeModal = useCallback(() => {
		setActiveItemIndex(null);
		document.body.style.overflow = 'auto';
	}, []);

	const nextItem = useCallback(() => {
		if (activeItemIndex === null) return;
		setActiveItemIndex((prevIndex) =>
			prevIndex !== null ? (prevIndex + 1) % galleryItemsData.length : null
		);
	}, [activeItemIndex]);

	const prevItem = useCallback(() => {
		if (activeItemIndex === null) return;
		setActiveItemIndex((prevIndex) =>
			prevIndex !== null
				? (prevIndex - 1 + galleryItemsData.length) %
				  galleryItemsData.length
				: null
		);
	}, [activeItemIndex]);

	useEffect(() => {
		const handleKeyDown = (event: KeyboardEvent) => {
			if (activeItemIndex === null) return;
			if (event.key === 'Escape') closeModal();
			else if (event.key === 'ArrowRight') nextItem();
			else if (event.key === 'ArrowLeft') prevItem();
		};
		window.addEventListener('keydown', handleKeyDown);
		return () => window.removeEventListener('keydown', handleKeyDown);
	}, [activeItemIndex, closeModal, nextItem, prevItem]);

	const activeItem =
		activeItemIndex !== null ? galleryItemsData[activeItemIndex] : null;

	return (
		<div className='pt-24 md:pt-32 bg-gray-900 min-h-screen'>
			<div className='container mx-auto px-4 py-16'>
				<button
					onClick={() => navigate('/')}
					className='mb-8 flex items-center text-gray-300 hover:text-red-500 transition-colors'
				>
					<ArrowLeft size={20} className='mr-2' />
					Назад на главную
				</button>

				<h1 className='text-4xl font-bold text-white mb-6'>
					Галерея наших работ
				</h1>
				<p className='text-gray-300 mb-12 max-w-3xl'>
					Здесь вы можете увидеть примеры наших работ. Кликните на любую
					карточку, чтобы открыть ее в режиме просмотра и листать галерею.
				</p>

				<div className='grid grid-cols-1 md:grid-cols-2 gap-x-8 gap-y-10'>
					{galleryItemsData.map((item, index) => (
						<div key={item.id} className='group'>
							<div
								className='relative overflow-hidden rounded-lg h-[350px] md:h-[400px] mb-3 bg-gray-800 cursor-pointer'
								onClick={() => openModal(index)}
							>
								{item.type === 'single' ? (
									<>
										<img
											src={item.imageUrl}
											alt={item.title}
											className='w-full h-full object-cover transition-transform duration-500 group-hover:scale-110'
											loading='lazy'
										/>
										<div className='absolute inset-0 bg-black/40 opacity-0 group-hover:opacity-100 transition-opacity flex items-center justify-center pointer-events-none'>
											<svg
												xmlns='http://www.w3.org/2000/svg'
												fill='none'
												viewBox='0 0 24 24'
												strokeWidth={1.5}
												stroke='white'
												className='w-12 h-12'
											>
												<path
													strokeLinecap='round'
													strokeLinejoin='round'
													d='m21 21-5.197-5.197m0 0A7.5 7.5 0 1 0 5.196 5.196a7.5 7.5 0 0 0 10.607 10.607Z'
												/>
											</svg>
										</div>
									</>
								) : (
									<ImageCompare
										beforeImage={item.beforeImage}
										afterImage={item.afterImage}
										altBefore={`До - ${item.title}`}
										altAfter={`После - ${item.title}`}
									/>
								)}
							</div>
							<div>
								<h4 className='text-lg font-semibold text-white mb-1'>
									{item.title}
									{item.type === 'beforeAfter' && (
										<span className='text-sm text-gray-400 ml-2'>
											(До/После)
										</span>
									)}
								</h4>
								<p className='text-gray-300 text-sm'>{item.description}</p>
							</div>
						</div>
					))}
				</div>
			</div>

			{activeItem !== null && (
				<div
					className='fixed inset-0 bg-black/90 z-[100] flex flex-col p-4'
					onClick={closeModal}
				>
					<button
						onClick={closeModal}
						className='absolute top-4 right-4 text-white hover:text-red-500 transition-colors z-[102]'
						aria-label='Закрыть'
					>
						<X size={32} />
					</button>

					<div
						className='relative flex-grow flex items-center justify-center w-full h-full overflow-hidden'
						onClick={(e) => e.stopPropagation()}
					>
						{activeItem.type === 'single' ? (
							<img
								src={activeItem.imageUrl}
								alt={activeItem.title}
								className='block max-w-full max-h-full object-contain rounded-lg shadow-xl'
							/>
						) : (
							<div className='w-full h-full max-w-6xl max-h-[85vh] aspect-video bg-gray-800 rounded overflow-hidden'>
								<ImageCompare
									beforeImage={activeItem.beforeImage}
									afterImage={activeItem.afterImage}
									altBefore={`До - ${activeItem.title}`}
									altAfter={`После - ${activeItem.title}`}
								/>
							</div>
						)}
					</div>

					<div
						className='w-full max-w-4xl mx-auto text-center pt-4 text-white flex justify-between items-center'
						onClick={(e) => e.stopPropagation()}
					>
						<button
							onClick={prevItem}
							className='bg-black/50 rounded-full p-2 hover:bg-red-600 transition-colors'
							aria-label='Предыдущий слайд'
						>
							<ArrowLeft size={24} />
						</button>
						<div className='px-4'>
							<h3 className='text-lg md:text-xl font-semibold'>
								{activeItem.title}
							</h3>
							<p className='text-sm text-gray-300'>
								{activeItem.description}
							</p>
						</div>
						<button
							onClick={nextItem}
							className='bg-black/50 rounded-full p-2 hover:bg-red-600 transition-colors rotate-180'
							aria-label='Следующий слайд'
						>
							<ArrowLeft size={24} />
						</button>
					</div>
				</div>
			)}
		</div>
	);
};

export default Gallery;

```

## src/pages/Home.tsx

```tsx
import React from 'react';
import Hero from '../components/Hero';
import GalleryPreview from '../components/GalleryPreview';
import Contact from '../components/Contact';
import ServicesSection from '../components/ServicesSection';
import { servicesData } from '../data/servicesData';

const Home = () => {
	const whyChooseUs = servicesData.find(
		(service) => service.id === 'why-choose-us'
	);
	const otherServices = servicesData.filter(
		(service) => service.id !== 'why-choose-us'
	);

	return (
		<div>
			<Hero />

			{whyChooseUs && (
				<section className='py-20 bg-gray-950'>
					<div className='container mx-auto px-4'>
						<div className='grid grid-cols-1 lg:grid-cols-2 gap-12 items-center'>
							<div>
								<h2 className='text-3xl md:text-4xl font-bold text-white mb-6'>
									{whyChooseUs.title}
								</h2>
								<p className='text-gray-300 text-lg mb-8'>
									{whyChooseUs.fullDescription}
								</p>
								<ul className='space-y-4'>
									{whyChooseUs.services.map((service, index) => (
										<li
											key={index}
											className='flex items-start text-gray-300'
										>
											<span className='text-red-500 mr-3'>•</span>
											{service}
										</li>
									))}
								</ul>
							</div>
							<div className='relative h-[400px] rounded-lg overflow-hidden'>
								<img
									src={whyChooseUs.imageUrl}
									alt={whyChooseUs.title}
									className='w-full h-full object-cover'
								/>
								<div className='absolute inset-0 bg-gradient-to-t from-black/70 to-transparent'></div>
							</div>
						</div>
					</div>
				</section>
			)}

			<ServicesSection services={otherServices} />

			<GalleryPreview />
			<Contact />
		</div>
	);
};

export default Home;

```

## src/pages/ServicePage.tsx

```tsx
import React from 'react';
import { useNavigate } from 'react-router-dom';
import { ArrowLeft, Check, MessageCircle } from 'lucide-react';
import { servicesData } from '../data/servicesData';
import Contact from '../components/Contact';

interface ServicePageProps {
  serviceId: string;
}

const ServicePage: React.FC<ServicePageProps> = ({ serviceId }) => {
  const navigate = useNavigate();
  const service = servicesData.find(s => s.id === serviceId);

  if (!service) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-gray-900">
        <div className="text-center">
          <h2 className="text-3xl font-bold text-white mb-4">Услуга не найдена</h2>
          <button 
            onClick={() => navigate('/')}
            className="bg-red-600 hover:bg-red-700 text-white font-semibold py-2 px-6 rounded-md transition-colors"
          >
            Вернуться на главную
          </button>
        </div>
      </div>
    );
  }

  return (
    <div className="pt-16 bg-gray-900">
      {/* Hero section with background image */}
      <div 
        className="relative h-[50vh] flex items-center"
        style={{ 
          backgroundImage: `url(${service.imageUrl})`,
          backgroundPosition: 'center',
          backgroundSize: 'cover'
        }}
      >
        <div className="absolute inset-0 bg-black opacity-70"></div>
        <div className="container mx-auto px-4 relative z-10">
          <button 
            onClick={() => navigate('/')}
            className="mb-6 flex items-center text-gray-300 hover:text-red-500 transition-colors"
          >
            <ArrowLeft size={20} className="mr-2" />
            Назад на главную
          </button>
          <h1 className="text-4xl md:text-5xl font-bold text-white mb-4">
            {service.title}
          </h1>
        </div>
      </div>

      {/* Service details */}
      <div className="container mx-auto px-4 py-16">
        <div className="grid grid-cols-1 lg:grid-cols-3 gap-12">
          <div className="lg:col-span-2">
            <h2 className="text-3xl font-bold text-white mb-6">О услуге</h2>
            <p className="text-gray-300 text-lg mb-8">{service.fullDescription}</p>
            
            <h3 className="text-2xl font-semibold text-white mb-4">Предоставляемые услуги</h3>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mb-8">
              {service.services.map((item, index) => (
                <div key={index} className="flex items-start">
                  <div className="text-red-500 mr-3 mt-1">
                    <Check size={20} />
                  </div>
                  <span className="text-gray-300">{item}</span>
                </div>
              ))}
            </div>
          </div>
          
          <div>
            <div className="bg-gray-800 rounded-lg p-6 shadow-lg">
              <h3 className="text-xl font-semibold text-white mb-4">Свяжитесь с нами</h3>
              <p className="text-gray-300 mb-6">
                Для получения консультации или записи на сервис напишите нам в WhatsApp или позвоните
              </p>
              <a 
                href="https://wa.me/79655118585" 
                target="_blank"
                rel="noopener noreferrer"
                className="block w-full bg-green-600 hover:bg-green-700 text-white text-center font-semibold py-3 rounded-md mb-4 transition-colors flex items-center justify-center"
              >
                <MessageCircle className="mr-2" size={20} />
                Написать в WhatsApp
              </a>
              <a 
                href="tel:+79655118585" 
                className="block w-full bg-red-600 hover:bg-red-700 text-white text-center font-semibold py-3 rounded-md mb-4 transition-colors"
              >
                Позвонить
              </a>
              <div className="text-gray-400 text-sm">
                <p className="mb-2">Часы работы: 10:00-22:00</p>
                <p>Адрес: Березовский, Транспортников 42А</p>
              </div>
            </div>
          </div>
        </div>
      </div>

      <Contact />
    </div>
  );
};

export default ServicePage;
```

## src/vite-env.d.ts

```ts
/// <reference types="vite/client" />

```

Отвечай на русском это очень важно.
Пиши код целиком и не сокращай. 

Нужно добавить адрес в Navbar в первую строку, там где логотип и номер телефона. Адрес нужно добавить рядом с номером телефона. Березовский, транспортников 42А
